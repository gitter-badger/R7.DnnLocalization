<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ModerateHeader.Text">
    <value>Выберите представление для модерирования:   </value>
  </data>
  <data name="EventsListItem.Text">
    <value>События</value>
  </data>
  <data name="EnrollmentListItem.Text">
    <value>Приглашения</value>
  </data>
  <data name="chkEmail.Text">
    <value>Послать по электронной почте уведомление пользователю?</value>
  </data>
  <data name="plEmailSubject.Text">
    <value>Тема Email:</value>
  </data>
  <data name="plEmailMessage.Text">
    <value>Сообщение Email:</value>
  </data>
  <data name="cmdCancelOptions.Text">
    <value>Возврат</value>
  </data>
  <data name="cmdUpdateSelected.Text">
    <value>Обновить</value>
  </data>
  <data name="cmdSelectApproveAll.Text">
    <value>Выбрать все одобренные</value>
  </data>
  <data name="cmdSelectDenyAll.Text">
    <value>Выбрать все отвергнутые</value>
  </data>
  <data name="cmdUnmarkAll.Text">
    <value>Отменить выделение</value>
  </data>
  <data name="plMessage.Text">
    <value>Примечание: Отказ удалит События/Подписки из Базы данных!</value>
  </data>
  <data name="ConfirmUpdateDeleteModerate.Text">
    <value>Вы уверены, что хотите обновить/удалить элемент(ы) (и отправить электронную почту)?
</value>
  </data>
  <data name="ConfirmModerateSendMailToUser.Text">
    <value>Вы уверены, что хотите послать письмо пользователю?</value>
  </data>
  <data name="MsgModerateNothingToModerate.Text">
    <value>Нет никаких новых Событий/Регистраций для модерирования...</value>
  </data>
  <data name="MsgModerateNoteDenyOption.Text">
    <value>Примечание: Отказ удалит События/Приглашения из Базы данных!</value>
  </data>
  <data name="Action.Text">
    <value>Действия</value>
  </data>
  <data name="Date.Text">
    <value>Дата</value>
  </data>
  <data name="Time.Text">
    <value>Время</value>
  </data>
  <data name="Event.Text">
    <value>Событие</value>
  </data>
  <data name="User.Text">
    <value>Пользователь</value>
  </data>
  <data name="Deny.Text">
    <value>Отказать</value>
  </data>
  <data name="grdEventApprove.Text">
    <value>Ваш запрос нового или обновленного cобытия: {0} &lt;br&gt; : {1} в {2} &lt;br&gt; был одобрен! &lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="Attachment.Text">
    <value>Вложение - файл, который может загрузить событие в Microsoft Outlook или другие локальные календарные приложения!&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="grdEventDeny.Text">
    <value>Ваш запрос нового или обновленного cобытия: {0} &lt;br&gt; : {1} в {2} &lt;br&gt; был отвергнут!
&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="grdEnrollApprove.Text">
    <value>Ваш запрос для регистрации на событие: {0} &lt;br&gt; : {1} в {2} &lt;br&gt; был принят и одобрен! &lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="grdEnrollDeny.Text">
    <value>Ваш запрос для  регистрации на событие: {0} &lt;br&gt; : {1} в {2} &lt;br&gt; был отвергнут!&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ControlTitle_moderate.Text">
    <value>Модерировать приглашения/события</value>
  </data>
  <data name="Approve.Text">
    <value>Утвердить</value>
  </data>
  <data name="lblEmailFrom.Help">
    <value>Адрес Email, от имени которого будет  происходить  рассылка  сообщений по e-mail.</value>
  </data>
  <data name="lblEmailFrom.Text">
    <value>Email от кого:</value>
  </data>
  <data name="lblModerateView.Help">
    <value>Эта форма используется, чтобы модерировать события (если модерирование было сконфигурировано - см. параметры настройки). Новые события или регистрации могут модерироваться выбором переключателя.</value>
  </data>
  <data name="lblModerateView.Text">
    <value>Выберите представление для модерирования:</value>
  </data>
  <data name="lblNotifyEmailMessage.Help">
    <value>Почтовое сообщение для уведомления может содержать следующие параметры: {0} = Заголовок, {1} = Начальная дата, {2} = Начальное время, {3} = Время окончания, {4} = Часовой пояс
</value>
  </data>
  <data name="lblNotifyEmailMessage.Text">
    <value>Сообщение:</value>
  </data>
  <data name="lblNotifyEmailSubject.Help">
    <value>Поле тема для уведомления может содержать следующие параметры: {0} = Заголовок, {1} = Начальная дата, {2} = Начальное время, {3} = Время окончания, {4} = Часовой пояс
</value>
  </data>
  <data name="lblNotifyEmailSubject.Text">
    <value>Тема сообщения:</value>
  </data>
  <data name="returnButton.Text">
    <value>Возврат</value>
  </data>
  <data name="txtEmailMessage.Text">
    <value>Событие/регистрация для события: {0}  с {1} {2} до {3} ({4}) было обновлено</value>
  </data>
  <data name="txtEmailSubject.Text">
    <value>Ваше событие/регистрация для события:{0} с {1} @ {2} было обновлено</value>
  </data>
</root>