<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="chkSyndicateIndependant.Text" xml:space="preserve">
    <value>Создавать независимые подписки. Если эта опиция НЕ отмечена, блог будет выглядеть в подписке, как  категория родительского блога. </value>
  </data>
  <data name="lblChildBlogsDescription.Text" xml:space="preserve">
    <value>Если Вам надо разделить ваш блог по различным категориям,то Вы должны определить их место. Наличие дочернего блога позволяет Вам создавать подблоги; в пределах вашего блога. Каждый из них имеет собственные опции для публикации, и может быть создавать отдельную RSS-подписку, независимо от вашего корневого блога.
</value>
  </data>
  <data name="chkSyndicate.Text" xml:space="preserve">
    <value>Создать RSS-подписку этого блога.</value>
  </data>
  <data name="chkPublic.Text" xml:space="preserve">
    <value>Сделать блог публичным</value>
  </data>
  <data name="lblTitleDescription.Text" xml:space="preserve">
    <value>Заголовок вашего блога. Он будет показываться наверху вашего списка записей и в каталоге блогов.</value>
  </data>
  <data name="lblSyndicationEmail.Text" xml:space="preserve">
    <value>Использовать этот почтовый адрес для поля RSS "ManagingEditor" (главный редактор):</value>
  </data>
  <data name="lblDateTimeDescription.Text" xml:space="preserve">
    <value>Эти опции управляют тем, как  отображаются дата и время в пределах вашего блога во всех категориях и записях в пределах вашего блога.</value>
  </data>
  <data name="lblDescriptionDescription.Text" xml:space="preserve">
    <value>Краткое описание вашего блога - хорошее место для того, чтобы описать ваши намерения в вашем блоге, и какого рода информацию могут ожидать в нем читатели.</value>
  </data>
  <data name="chkEmailNotification.Text" xml:space="preserve">
    <value>Отправлять уведомление  по почте после публикации комментариев</value>
  </data>
  <data name="chkAutoTrackbacks.Text" xml:space="preserve">
    <value>Автопоиск ссылок из других блогов (trackbacks), режим клиента</value>
  </data>
  <data name="chkCaptcha.Text" xml:space="preserve">
    <value>Использовать ловушку для комментариев</value>
  </data>
  <data name="lblCommentOptions.Text" xml:space="preserve">
    <value>Опции комментария:</value>
  </data>
  <data name="lblCommentOptionsDescription.Text" xml:space="preserve">
    <value>Опции комментария.</value>
  </data>
  <data name="lblTrackbackOptions.Text" xml:space="preserve">
    <value>Настройки trackback:</value>
  </data>
  <data name="lblTrackbackOptionsDescription.Text" xml:space="preserve">
    <value>Настройки trackback.</value>
  </data>
  <data name="lblMetaWeblogOptions.Text" xml:space="preserve">
    <value>Настройки MetaWeblog:</value>
  </data>
  <data name="lblMetaWeblogOptionsDescription.Text" xml:space="preserve">
    <value>Используйте следующий URL для подключения к своему блогу через клиент MetaWeblog, например Windows Live Writer или Word 2007. Измените параметр tabid, если блог показывается на другой странице.</value>
  </data>
  <data name="lblRegenerate.Text" xml:space="preserve">
    <value>Обновить пермалинки:</value>
  </data>
  <data name="lblRegenerateDescription.Text" xml:space="preserve">
    <value>Обновляет/пересоздает все пермалинки блога. Как правило, это требуется после того, как изменятся настройки дружественных URL сайта.</value>
  </data>
  <data name="cmdGenerateLinks.Text" xml:space="preserve">
    <value>Обновить пермалинки</value>
  </data>
  <data name="lblAnonymousComments.Text" xml:space="preserve">
    <value>Комментарии анонимных пользователей:</value>
  </data>
  <data name="lblUsersComments.Text" xml:space="preserve">
    <value>Комментарии зарегистрированных пользователей:</value>
  </data>
  <data name="rdoComments_Allow.Text" xml:space="preserve">
    <value>Разрешить</value>
  </data>
  <data name="rdoComments_Disallow.Text" xml:space="preserve">
    <value>Запретить</value>
  </data>
  <data name="rdoComments_RequireApproval.Text" xml:space="preserve">
    <value>Требовать подтверждение</value>
  </data>
  <data name="lblTrackbacks.Text" xml:space="preserve">
    <value>Внешние комментарии:</value>
  </data>
  <data name="txtTweetTemplate.Text" xml:space="preserve">
    <value>Блог: {title} - {url}</value>
  </data>
  <data name="lblAvailableTokens.Text" xml:space="preserve">
    <value>Доступные знаки:</value>
  </data>
  <data name="lblChildBlogsOff.Text" xml:space="preserve">
    <value>Возможность создания дочерних блогов была отключена администратором. Вместо этого, вы можете использовать категории. Существующие дочерние блоги по прежнему доступны, но новые создавать нельзя.</value>
  </data>
  <data name="lblMetaWeblogNotAvailable.Text" xml:space="preserve">
    <value>Интеграция с клиентами MetaWeblog отключена</value>
  </data>
  <data name="chkAutoTrackbacks.Help">
    <value>If you enable this option an auto discovery for trackbacks will be done while saving your blog entry</value>
  </data>
  <data name="cmdAdd.Text">
    <value>Add</value>
  </data>
  <data name="lblChildBlogs.Text">
    <value>Child Blogs:</value>
  </data>
  <data name="lblCulture.Text">
    <value>Culture:</value>
  </data>
  <data name="lblDateFormat.Text">
    <value>Date Format:</value>
  </data>
  <data name="lblDateTime.Text">
    <value>Date and Time Options:</value>
  </data>
  <data name="lblDescription.Text">
    <value>Description:</value>
  </data>
  <data name="lblOptions.Text">
    <value>Blog Options:</value>
  </data>
  <data name="lblOptionsDescription.Text">
    <value>These options control the main blog features.</value>
  </data>
  <data name="lblSyndicationOptions.Text">
    <value>Syndication Options:</value>
  </data>
  <data name="lblTimeZone.Text">
    <value>Time Zone:</value>
  </data>
  <data name="lblTitle.Text">
    <value>Title:</value>
  </data>
  <data name="lblUserIdentity.Text">
    <value>When displaying your identity use:</value>
  </data>
  <data name="ModuleHelp.Text">
    <value>&lt;h1&gt;Blog - Edit Blog&lt;/h1&gt;
&lt;p&gt;These options control the main blog features.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Title&lt;/b&gt;&lt;br /&gt;This is the display title for your blog. It will display at the top of your entry list and in the blog directory.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt;&lt;br /&gt;This is a brief summary description of your blog. It's a good place to describe your intentions with your blog and what information readers can expect.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Make this blog public&lt;/b&gt;&lt;br /&gt;If checked, all the visitors who have view permissions to the page will be able to read the blog. If unchecked, the blog will be visible only to the blog owner.&lt;/p&gt;&lt;p&gt;&lt;b&gt;When displaying your identity use&lt;/b&gt;&lt;br /&gt;This setting controls the name that will be displayed as the author of the content. Two options are available: the DNN user name or the user's full name.&lt;/p&gt;&lt;p&gt;&lt;b&gt;MetaWeblog Options&lt;/b&gt;&lt;br /&gt;The displayed URL is to be used to connect to your blog using a MetaWeblog enabled client such as Windows Live Writer or Word 2007. The tabid parameter may be changed as needed if this blog appears on a different tab.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Comment Options&lt;/b&gt;&lt;br /&gt;These options control the comment related settings. Comments may be added by registered users, Unauthenticated users or from other blogs as Trackback comments. The blog owner has three options: Allow, Disallow or Require Approval. If Allow is checked, the comments will be displayed as soon as they are added. If Disallow is checked, comments will be disabled. If Require Approval is checked, the comments will need to be approved by the blog owner before being displayed.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Send mail notification after comments and trackbacks are posted&lt;/b&gt;&lt;br /&gt;If checked, the blog owner will receive an email whenever a comment is added to a blog post.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Use CAPTCHA for comments&lt;/b&gt;&lt;br /&gt;If checked, this will enable a security check when adding comments to avoid spamming.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Trackback Auto Discovery (Client Mode)&lt;/b&gt;&lt;br /&gt;If checked, the module will scan the entry post when it is added in search of trackback links and attempt to send them a trackback comment.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Syndication Options&lt;/b&gt;&lt;br /&gt;Here the blog owner can decide if make an RSS feed available to the visitors for the blog. If checked, an RSS icon with the corresponding link will be displayed besides the blog title in the blog list. The blog owner may also decide to include an email in the "ManagingEditor" field of the RSS feed.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Date and Time Options&lt;/b&gt;&lt;br /&gt;These options control how date and time are displayed within your blog. This setting effects all categories and entries within your blog.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Regenerate Blog PermaLinks&lt;/b&gt;&lt;br /&gt;This link can be used after the Friendly URLs setting has been changed for the site. When clicked, the module will scann all the entries and attempt to regenerate all the permalinks according to any cahnges to the Friendly URLs settings and to the entry titles.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Child Blogs&lt;/b&gt;&lt;br /&gt;If you would like to break your blog up into different categories, this is where you define them. Having Child-Blogs allows you to create sub-blogs within your blog. Each one has its own options for publication and can be syndicated separately from your root blog.&lt;/p&gt;</value>
  </data>
  <data name="msgCreateBlog.Text">
    <value>Create new Blog</value>
  </data>
  <data name="msgCreateNewChildBlog.Text">
    <value>Create new Child Blog</value>
  </data>
  <data name="msgDeleteBlog.Text">
    <value>Are you sure you want to delete this blog ?</value>
  </data>
  <data name="msgDeleteChildBlog.Text">
    <value>Are you sure you want to delete this child blog ?</value>
  </data>
  <data name="msgEditBlog.Text">
    <value>Edit Blog</value>
  </data>
  <data name="msgEditChildBlog.Text">
    <value>Edit Child Blog</value>
  </data>
  <data name="rdoUserName_FullName.Text">
    <value>Full Name</value>
  </data>
  <data name="rdoUserName_UserName.Text">
    <value>User Name</value>
  </data>
  <data name="valTitle.ErrorMessage">
    <value>Title is Required</value>
  </data>
  <data name="valTitleDescription.ErrorMessage">
    <value>Title Description is Required</value>
  </data>
</root>