<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Название</value>
  </data>
  <data name="lblTitle.Help" xml:space="preserve">
    <value>Введите название отчета</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Настройки отчета</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;Страница настройки отчёта&lt;/h1&gt;
&lt;p&gt;На странице настройки, пользователи могут задать назавание отчёта, которое отображается 
после значка &amp;quot;?&amp;quot; вверху. Изменение описания отчёта, изменит отображаемый текст при 
нажатии на значок &amp;quot;?&amp;quot;, при развертывании заголовка. В настройках запроса можно изменить 
SQL-запрос, используемый, чтобы генерировать данные для отчета. Учтите, что имена 
столбцов, возвращенные запросом используются, чтобы создать заголовки столбца в 
отчете. Используйте зарезервированное ключевое слово SQL &amp;quot;AS&amp;quot;, чтобы дать столбцу 
новый текст заголовка. Наконец, в параметрах настройки экрана, пользователи могут 
разрешать или отключать сортировку и листание. Если листание допускается, пользователи 
могут ввести размер страницы, который они желают использовать. &lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1&gt;О модуле Отчёт&lt;/h1&gt;
&lt;p&gt;Модуль отчет выдает простую сетку, основанную на результатах запроса SQL, который 
введен на странице настройки Модуля. Пользователи, которые имеют право на редактирование 
к этому модулю, могут открыть настройки для этого модуля и изменить название, написать 
кроткое описание, и задать SQL-запрос, который будет выполнен, чтобы создать отчёт. 
В зависимости от настройки показа, выбранных для модуля, пользователи с доступом 
просмотра к этому модулю могут сортировать и листать страницы с результатами.&lt;/p&gt;
</value>
  </data>
  <data name="DataSource.Section" xml:space="preserve">
    <value>Настройки источника данных</value>
  </data>
  <data name="Display.Section" xml:space="preserve">
    <value>Настройки показа</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Введите краткое описание отчета</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="lblQuery.Help" xml:space="preserve">
    <value>Введите SQL-запрос для построения отчёта</value>
  </data>
  <data name="lblQuery.Text" xml:space="preserve">
    <value>Запрос</value>
  </data>
  <data name="lblPageData.Help" xml:space="preserve">
    <value>Включить разбиение на страницы</value>
  </data>
  <data name="lblPageData.Text" xml:space="preserve">
    <value>Разбивать на страницы?</value>
  </data>
  <data name="lblPageSize.Help" xml:space="preserve">
    <value>Определите число записей на страницу данных</value>
  </data>
  <data name="lblPageSize.Text" xml:space="preserve">
    <value>Размер страницы</value>
  </data>
  <data name="lblSortData.Help" xml:space="preserve">
    <value>Отметьте это поле, чтобы разрешить сортировку</value>
  </data>
  <data name="lblSortData.Text" xml:space="preserve">
    <value>Разрешить сортировку?</value>
  </data>
  <data name="SuperUsersOnly.Text" xml:space="preserve">
    <value>Только пользователям хоста разрешено редактировать параметры источника данных для отчётов</value>
  </data>
  <data name="lblShowHeader.Help" xml:space="preserve">
    <value>Отметьте это поле, чтобы отображать заголовки (имена колонок) в отчете</value>
  </data>
  <data name="lblShowHeader.Text" xml:space="preserve">
    <value>Показывать заголовки?</value>
  </data>
  <data name="btnHideTestResults.Text">
    <value>Спрятать результаты</value>
  </data>
  <data name="btnHideXmlSource.Text">
    <value>Спрятать Xml-исходники</value>
  </data>
  <data name="btnShowXml.Text">
    <value>Показать Xml-исходники</value>
  </data>
  <data name="btnTestQuery.Confirm">
    <value>ВНИМАНИЕ! Это действие выполнит ваш SQL-запрос. Если Вы включили какой-нибудь код модификации данных (INSERT, UPDATE, DELETE)  или код определения данных (CREATE или DROP), то они выполнятся!  Вы хотите продолжить?</value>
  </data>
  <data name="btnTestQuery.Text">
    <value>Тестирование запроса</value>
  </data>
  <data name="btnUpload.Text">
    <value>Загрузить</value>
  </data>
  <data name="CacheFor.Text">
    <value>Кэшировать данные </value>
  </data>
  <data name="lblCacheDuration.Help">
    <value>Определяет, разрешено  ли кэшировать результаты запроса  и  длительность в минутах.</value>
  </data>
  <data name="lblCacheDuration.Text">
    <value>Кэширование</value>
  </data>
  <data name="lblQueryUpload.Help">
    <value>Загрузите SQL-сценарий, чтобы использовать его в качестве  запроса</value>
  </data>
  <data name="lblQueryUpload.Text">
    <value>Загрузка SQL-файла</value>
  </data>
  <data name="lblVisualizer.Help">
    <value>Выберите представление, которое будет использоваться, при отображении данных в этом отчёте. Эта установка может быть отличной для разных экземпляров этого же самого модуля отчётов, расположенных на  различных страницах сайта</value>
  </data>
  <data name="lblVisualizer.Text">
    <value>Активное представление</value>
  </data>
  <data name="lblXmlSource.Help">
    <value>Xml-исходник, используемый в XSLT-преобразовании данных</value>
  </data>
  <data name="lblXmlSource.Text">
    <value>Исходник Xml</value>
  </data>
  <data name="Minutes.Text">
    <value>минут</value>
  </data>
  <data name="NoVisualizer.Text">
    <value>&lt;Без представления&gt;</value>
  </data>
  <data name="TestQueryFail.Message">
    <value>Ошибка в вашем запросе в строке {0}: {1}</value>
  </data>
  <data name="TestQuerySuccess.Message">
    <value>Тест прошел успешно. Возвращено {0} записей.</value>
  </data>
  <data name="Visualizer.Text">
    <value>{0} Представление</value>
  </data>
  <data name="VisualizerNotConfigured.Text">
    <value>Нет активных представлений, сконфигурированных для этого модуля</value>
  </data>
  <data name="WarningMessage.Text">
    <value>Предупреждение! Любой, кто может видеть этот модуль, будет в состоянии проссматривать результаты отчётов. Запросы, введенные здесь, могут выдать  данные из любой таблицы в базе данных, поэтому учитывайте их секретность и безопасность, при их записи.</value>
  </data>
</root>