<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plEnableSystemAvatar.Help" xml:space="preserve">
    <value>Администраторам сайта или форума будет разрешено менять аватары выбранным пользователям. Операция осуществляется для каждого пользователя, а не для роли.</value>
  </data>
  <data name="plEnableUserAvatarPool.Help" xml:space="preserve">
    <value>Если включено, вы сможете загрузить набор изображений, из которого пользователи смогут выбирать аватары. Для включения этой функции предварительно необходимо разрешить использование пользовательских аватар.&lt;br /&gt;
&lt;em&gt;ПРИМЕЧАНИЕ&lt;/em&gt;&lt;br /&gt;Пользователи не смогут загружать свои изображения для использования в качестве аватар.</value>
  </data>
  <data name="plSystemAvatarPath.Help" xml:space="preserve">
    <value>Путь к системным аватарам соответствует &lt;strong&gt;корневому каталогу портала&lt;/strong&gt;.
&lt;br /&gt;Например, domain.com/Portals/0/</value>
  </data>
  <data name="plSystemAvatarSizeLimit.Help" xml:space="preserve">
    <value>Ограничение размера файла (в Кб) для загружаемых системных аватар.</value>
  </data>
  <data name="plUserAvatarPath.Help" xml:space="preserve">
    <value>Путь к пользовательским аватарам соответствует &lt;strong&gt;корневому каталогу портала&lt;/strong&gt;.
&lt;br /&gt;Например, domain.com/Portals/0/</value>
  </data>
  <data name="plUserAvatarSizeLimit.Help" xml:space="preserve">
    <value>Ограничение размера загружаемого файла пользовательской аватары (в Кб).</value>
  </data>
  <data name="ControlTitle_avatarmanager.Text">
    <value>Управление аватарами</value>
  </data>
  <data name="plEnableSystemAvatar.Text">
    <value>Включить системный аватар</value>
  </data>
  <data name="plEnableUserAvatar.Help">
    <value>Если отмечено, пользователям будет разрешено подгружать изображение для своего профиля, которое будет использоваться в сообщении и личном кабинете. </value>
  </data>
  <data name="plEnableUserAvatar.Text">
    <value>Включить пользовательские аватары</value>
  </data>
  <data name="plEnableUserAvatarPool.Text">
    <value>Включить набор аватар</value>
  </data>
  <data name="plSystemAvatarDimensions.Help">
    <value>Ширина и высота создаваемых миниатюр для использования в качестве системных аватар. </value>
  </data>
  <data name="plSystemAvatarDimensions.Text">
    <value>Размеры системных аватар</value>
  </data>
  <data name="plSystemAvatarPath.Text">
    <value>Путь к системным аватарам</value>
  </data>
  <data name="plSystemAvatarSizeLimit.Text">
    <value>Ограничение размера системных аватар</value>
  </data>
  <data name="plUserAvatarDimensions.Help">
    <value>Ширина и высота создаваемых миниатюр для использования в качестве пользовательских аватар. </value>
  </data>
  <data name="plUserAvatarDimensions.Text">
    <value>Размеры системных аватар</value>
  </data>
  <data name="plUserAvatarPath.Text">
    <value>Путь к пользоватеским аватарам</value>
  </data>
  <data name="plUserAvatarSizeLimit.Text">
    <value>Ограничение размера пользовательских аватар</value>
  </data>
  <data name="validSystemDimHeight.Text">
    <value>Неверное значение высоты системных аватар.</value>
  </data>
  <data name="validSystemDimWidth.Text">
    <value>Неверное значение ширины системных аватар.</value>
  </data>
  <data name="validSystemSize.Text">
    <value>Неверное значение максимального размера системных аватар.</value>
  </data>
  <data name="validUserDimHeight.Text">
    <value>Неверное значение высоты пользовательских аватар.</value>
  </data>
  <data name="validUserDimWidth.Text">
    <value>Неверное значение ширины пользовательских аватар.</value>
  </data>
  <data name="validUserSize.Text">
    <value>Неверное значение максимального размера пользовательских аватар.</value>
  </data>
</root>